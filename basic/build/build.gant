// vim: ft=groovy sw=4

final String baseDir = {
    String v = ant.project.baseDir.getCanonicalPath().replace('\\', '/');
    if (v.endsWith("/")) v = v.substring(0, v.length() - 1)
        v
}();

final checkProp = {
    if (!antProp(it)) { 
        ant.fail(message: "no $it"); 
    } else {
        ant.echo(message: it + "=" + antProp(it));
    }
}

final rel = { String file -> "$baseDir/$file" };

final String antProp(String it) { ant.project.properties[it] as String };

final String mod = rel('..');
final String build = rel("../jar");

final buildtypes = ["debug", "release"]
final platforms = []

String os = "unknown"
String version = "0"

/* ------------------------------------------------------------------------- */
target(name: 'init') {
    ant.echo(message: "building " + new File(mod).getCanonicalPath());

    ant.presetdef(name: 'exec') {
        exec(failifexecutionfails: "true", failonerror: "true", dir: mod);
    }

    ant.presetdef(name: "copy") {
        copy(overwrite: "true", failonerror: "true", preservelastmodified: "true");
    }

    ant.echo(message: "os.name=" + antProp('os.name'));
    ant.echo(message: "os.arch=" + antProp('os.arch'));
    ant.echo(message: "os.version=" + antProp('os.version'));

    String osname = antProp('os.name').toLowerCase(Locale.US);

    if (osname.contains("mac")) {
        os = "mac";
    } else if (osname.contains("win")) {
        os = "windows";
    } else {
        os = "linux";
    }

    ant.echo(message: "version=" + version);
    ant.echo(message: "os=${os}");
    ant.echo(message: "arch=${antProp('os.arch')}");

    checkProp("jdk");
    checkProp("swig");

    ant.echo(message: "buildtypes=$buildtypes");
    ant.echo(message: "platforms=$platforms");
}

target(name: 'clean') {
    depends(['init']);
    ant.delete(dir: build);
}

target(name: 'sqlite4java.jar') {
    depends(['init']);

    def name = "sqlite4java";
    def target = "${build}/${name}";
    def classes = "${target}.classes";
    
    ant.delete(dir: target);
    ant.delete(dir: classes);
    ant.mkdir(dir: target);
    ant.mkdir(dir: classes);
  
    // do swig
    def outDir = "${target}/com/almworks/sqlite4java";
    ant.mkdir(dir: "${build}/swig");
    ant.mkdir(dir: outDir);
    def src_c = "${build}/swig/sqlite_wrap.c";
    def src_i = "${mod}/sqlite4java/swig/sqlite.i";
    def swig_cmd = "${antProp('swig')} -java -package com.almworks.sqlite4java -outdir ${outDir} -o ${src_c} ${src_i}";
    ant.exec(dir: mod, command: swig_cmd);

    // compile java 
    ant.copy(todir: target) { fileset(dir: "$mod/sqlite4java/java") };
    def javolution = rel('../lib/javolution.jar');
    ant.javac(srcdir: target, destdir: classes, debug: "on", classpath: javolution, target: "1.5", source: "1.5");
    
    // create jar 
    ant.jar(destfile: "${build}/${name}.jar", basedir: classes) {
        manifest {
            attribute(name: "Main-Class", value: "com.almworks.sqlite4java.SQLite");
            attribute(name: "Specification-Title", value: "sqlite4java");
            attribute(name: "Specification-Version", value: "v0.1");
            attribute(name: "Specification-Vendor", value: "ALM Works");
            attribute(name: "Implementation-Title", value: "sqlite4java");
            attribute(name: "Implementation-URL", value: "http://code.google.com/p/sqlite4java");
            attribute(name: "Implementation-Vendor", value: "ALM Works");
            attribute(name: "Implementation-Version", value: "v0.1");
        }
    }
}

target(name: "watchdog4java.jar") {
    depends(["init"]);
    
    def name = "watchdog4java";
    def target = "${build}/${name}";
    def classes = "${target}.classes";
    
    ant.delete(dir: target);
    ant.delete(dir: classes);
    ant.mkdir(dir: target);
    ant.mkdir(dir: classes); 
   
    // compile java
    ant.copy(todir: target) { fileset(dir: "${mod}/watchdog4java/java") };
    ant.javac(srcdir: target, destdir: classes, debug: "on", target: "1.5", source: "1.5");
 
    // create jar
    ant.jar(destfile: "${build}/${name}.jar", basedir: "$classes") {
        manifest {
            attribute(name: "Main-Class", value: "com.ipaloma.posjniproject.jni.NativeUtilitiesClass");
            attribute(name: "Specification-Title", value: "NativeUtilitiesClass");
            attribute(name: "Specification-Version", value: "v0.1");
            attribute(name: "Specification-Vendor", value: "iPaloma");
            attribute(name: "Implementation-Title", value: "NativeUtilitiesClass");
            attribute(name: "Implementation-URL", value: "http://www.ipaloma.com");
            attribute(name: "Implementation-Vendor", value: "iPaloma");
            attribute(name: "Implementation-Version", value: "v0.1");
        }
    }
}

target(name: "build.jar") {
    depends(["sqlite4java.jar", "watchdog4java.jar"]);
}
